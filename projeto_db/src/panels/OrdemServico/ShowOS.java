/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels.OrdemServico;

import forms.Dashboard;
import java.math.RoundingMode;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Currency;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.text.MaskFormatter;
import projeto_db.Client;
import projeto_db.OS;
import projeto_db.Projeto_DB;

/**
 *
 * @author Mateus
 */
public class ShowOS extends javax.swing.JPanel {

    /**
     * Creates new form ShowOS
     */
    
    Dashboard dboard;
    JDialog jDialog;
    
    public ShowOS() {
        initComponents();
    }
    public ShowOS(ArrayList<OS> os, ArrayList<Client> c, Dashboard d, JDialog jd) {
        initComponents();
        this.dboard = d;
        this.jDialog = jd;
        DefaultTableModel model = (DefaultTableModel) usrTable.getModel();
        for (int i = 0; i < os.size(); i++) {
            String valor =  String.format("%.2f", os.get(i).getValor());
            String cliente = "";
            for (int j = 0; j < c.size(); j++) {
                if(c.get(j).getId() == os.get(i).getClienteID()){
                    cliente = c.get(j).getName();
                    break;
                }
            }
            model.addRow(new Object[]{
                os.get(i).getId(),
                os.get(i).getData().toLocalDate().toString().replaceAll("-", "/"),
                os.get(i).getEquipamento(),
                os.get(i).getDefeito(),
                os.get(i).getServico(),
                os.get(i).getTecnico(),
                valor,
                cliente
            });
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        usrTable = new javax.swing.JTable();
        colunaInpt = new javax.swing.JComboBox<>();
        termoInpt = new javax.swing.JTextField();
        pesquisarBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        todosBtn = new javax.swing.JButton();
        excluirBtn = new javax.swing.JButton();
        atualizarBtn = new javax.swing.JButton();

        usrTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        usrTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Data", "Equipamento", "Defeito", "Serviço", "Técnico", "Valor", "Cliente"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usrTable.setRowHeight(25);
        usrTable.getTableHeader().setReorderingAllowed(false);
        usrTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usrTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(usrTable);

        colunaInpt.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        colunaInpt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Data", "Equipamento", "Defeito", "Serviço", "Técnico", "Valor", "Cliente" }));

        termoInpt.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        pesquisarBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        pesquisarBtn.setText("Pesquisar");
        pesquisarBtn.setToolTipText("");
        pesquisarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Termo:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Coluna:");

        todosBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        todosBtn.setText("TODOS");
        todosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todosBtnActionPerformed(evt);
            }
        });

        excluirBtn.setText("Excluir");
        excluirBtn.setEnabled(false);
        excluirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirBtnActionPerformed(evt);
            }
        });

        atualizarBtn.setText("Atualizar");
        atualizarBtn.setEnabled(false);
        atualizarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(colunaInpt, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(termoInpt, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pesquisarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(todosBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(excluirBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(atualizarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(colunaInpt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(termoInpt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pesquisarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(todosBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(excluirBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atualizarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pesquisarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarBtnActionPerformed
        usrTable.clearSelection();
        excluirBtn.setEnabled(false);
        atualizarBtn.setEnabled(false);
        if(!termoInpt.getText().equals("")){
            ArrayList<OS> os = null;
            ArrayList<Client> c = Projeto_DB.GetClients();

            if(colunaInpt.getSelectedItem() == "ID"){
                try{
                    os = Projeto_DB.GetOS("WHERE id LIKE '%" + Integer.parseInt(termoInpt.getText()) + "%'");
                } catch(Exception ex){
                    System.out.println(ex.getMessage());
                }
            } else if(colunaInpt.getSelectedItem() == "Data"){
                os = Projeto_DB.GetOS("WHERE data LIKE '%" + termoInpt.getText().replaceAll("/", "-") + "%'");
            } else if(colunaInpt.getSelectedItem() == "Equipamento"){
                os = Projeto_DB.GetOS("WHERE equipamento LIKE '%" + termoInpt.getText() + "%'");
            } else if(colunaInpt.getSelectedItem() == "Defeito"){
                os = Projeto_DB.GetOS("WHERE defeito LIKE '%" + termoInpt.getText() + "%'");
            } else if(colunaInpt.getSelectedItem() == "Serviço"){
                os = Projeto_DB.GetOS("WHERE servico LIKE '%" + termoInpt.getText() + "%'");
            } else if(colunaInpt.getSelectedItem() == "Técnico"){
                os = Projeto_DB.GetOS("WHERE tecnico LIKE '%" + termoInpt.getText() + "%'");
            } else if(colunaInpt.getSelectedItem() == "Valor"){
                try{
                    os = Projeto_DB.GetOS("WHERE valor LIKE '%" + Float.parseFloat((termoInpt.getText().replaceAll("\\.", "")).replaceAll(",", ".")) + "%'");
                } catch(Exception ex){
                    System.out.println(ex.getMessage());
                }
            } else if(colunaInpt.getSelectedItem() == "Cliente"){
                c = Projeto_DB.GetClients("WHERE nome LIKE '%" + termoInpt.getText() + "%'");
                String cond = "WHERE";
                for (int i = 0; i < c.size(); i++) {
                    cond += " cliente_id='"+c.get(i).getId()+"'";
                }
                os = Projeto_DB.GetOS(cond);
            }

            if(os != null){
                DefaultTableModel model = (DefaultTableModel) usrTable.getModel();
                model.setRowCount(0);
                for (int i = 0; i < os.size(); i++) {
                    String valor =  String.format("%.2f", os.get(i).getValor());
                    for (int j = 0; j < c.size(); j++) {
                        if(c.get(j).getId() == os.get(i).getClienteID()){
                            model.addRow(new Object[]{
                                os.get(i).getId(),
                                os.get(i).getData().toLocalDate().toString().replaceAll("-", "/"),
                                os.get(i).getEquipamento(),
                                os.get(i).getDefeito(),
                                os.get(i).getServico(),
                                os.get(i).getTecnico(),
                                valor,
                                c.get(j).getName()
                            });
                            break;
                        }
                    }
                }
            }
        } else {
            todoList();
        }
    }//GEN-LAST:event_pesquisarBtnActionPerformed

    private void todosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todosBtnActionPerformed
        todoList();
    }//GEN-LAST:event_todosBtnActionPerformed

    private void excluirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirBtnActionPerformed
        TableModel model = usrTable.getModel();
        int index = usrTable.getSelectedRow();
        if(index != -1){
            String text = "Você tem certeza que deseja apagar a Ordem de Serviço Nº" + model.getValueAt(index, 0) + "?";
            if(JOptionPane.showConfirmDialog(this.dboard, text, "Atenção", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                if(Projeto_DB.RemoveOS((int) model.getValueAt(index, 0))){
                    JOptionPane.showMessageDialog(this, "Ordem de Serviço removida com sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                    todoList();
                }else{
                    JOptionPane.showMessageDialog(this, "Não foi possível remover essa Ordem de Serviço.", "Erro [007]", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_excluirBtnActionPerformed

    public void todoList(){
        usrTable.clearSelection();
        excluirBtn.setEnabled(false);
        atualizarBtn.setEnabled(false);
        ArrayList<OS> os = Projeto_DB.GetOS();
        ArrayList<Client> c = Projeto_DB.GetClients();
        DefaultTableModel model = (DefaultTableModel) usrTable.getModel();
        model.setRowCount(0);
        for (int i = 0; i < os.size(); i++) {
            String valor =  String.format("%.2f", os.get(i).getValor());
            
            String cliente = "";
            for (int j = 0; j < c.size(); j++) {
                if(c.get(j).getId() == os.get(i).getClienteID()){
                    cliente = c.get(j).getName();
                    break;
                }
            }
            model.addRow(new Object[]{
                os.get(i).getId(),
                os.get(i).getData().toLocalDate().toString().replaceAll("-", "/"),
                os.get(i).getEquipamento(),
                os.get(i).getDefeito(),
                os.get(i).getServico(),
                os.get(i).getTecnico(),
                valor,
                cliente
            });
        }
    }
    
    private void atualizarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarBtnActionPerformed
        TableModel model = usrTable.getModel();
        int index = usrTable.getSelectedRow();
        if(index != -1){
            JDialog d = new JDialog(this.jDialog, "Atualizar Ordem de Serviço", true);
            AtualizarOS atuOS = new AtualizarOS((int) model.getValueAt(index, 0), d, Projeto_DB.GetClients(), (String) model.getValueAt(index, 7), this);
            
            atuOS.equiInpt.setText((String) model.getValueAt(index, 2));
            atuOS.defInpt.setText((String) model.getValueAt(index, 3));
            atuOS.servInpt.setText((String) model.getValueAt(index, 4));
            atuOS.tecInpt.setText((String) model.getValueAt(index, 5));
            atuOS.valInpt.setText((String) model.getValueAt(index, 6));
            
            d.getContentPane().add(atuOS);
            d.pack();
            d.setLocationRelativeTo(this);
            d.setVisible(true);
        }
    }//GEN-LAST:event_atualizarBtnActionPerformed

    private void usrTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usrTableMouseClicked
        int index = usrTable.getSelectedRow();
        if(index != -1){
            excluirBtn.setEnabled(true);
            atualizarBtn.setEnabled(true);
        }
    }//GEN-LAST:event_usrTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atualizarBtn;
    private javax.swing.JComboBox<String> colunaInpt;
    private javax.swing.JButton excluirBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pesquisarBtn;
    private javax.swing.JTextField termoInpt;
    private javax.swing.JButton todosBtn;
    private javax.swing.JTable usrTable;
    // End of variables declaration//GEN-END:variables
}
